[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "0.1.0"
description = "{{ cookiecutter.author }}"
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.author_email }}>"]
readme = "README.md"
packages = [{include = "{{ cookiecutter.repo_name }}"}]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
isort = "^5.12.0"
mypy = "^1.0.0"
flake8 = "^6.0.0"
pytest = "^7.2.1"
pre-commit = "^3.0.4"
pytest-cov = "^4.0.0"
flake8-pyproject = "^1.2.2"
commitizen = "^2.41.0"

[tool.isort]
profile = black
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.black]
exclude = '^_version.py'

[tool.flake8]
ignore = ['E231', 'E241', 'E501', 'W503']
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 88
count = true

[tool.mypy]
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true

[tool.pyright]
include = ["{{cookiecutter.repo_name}}"]
exclude = ["**/__pycache__"]
reportMissingImports = true
reportMissingTypeStubs = false

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
aws_import_script = "{{cookiecutter.repo_name}}.{{cookiecutter.repo_name}}:fib"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]